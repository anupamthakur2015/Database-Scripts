CREATE OR REPLACE FUNCTION FUNC_ACCEPT_REJECT_SAVE_ACCEPTING_REJECT_FABRIC(
	IN arr_fabric_requisition_id integer[],
	IN arr_fabric_order_no varchar[],
	IN arr_old_transaction_id varchar[],
	IN arr_new_transaction_id varchar[],
	IN arr_fabric_code varchar[],
	IN arr_style_ccode_id integer[],
	IN arr_item_code varchar[],
	IN arr_product_code varchar[],
	IN arr_cross_reference_personal text[],	
	IN arr_fabric_length float[],
	IN arr_fabric_width float[],
	IN arr_fabric_pcs integer[],
	IN arr_fabric_shrinkage integer[],
	IN arr_fabric_total_measurement float[],
	IN arr_fabric_total_amount float[],
	IN v_recycled char(1),	    
    OUT output_msg text,
    OUT id integer)
  RETURNS record AS
$BODY$

DECLARE
pmid integer;
BEGIN   
					
		
		INSERT INTO ACCEPTING_REJECT_FABRIC (
			fabric_requisition_id,
			fabric_order_no,
			old_transaction_id,
			new_transaction_id,
			fabric_code,
			style_ccode_id,
			item_code,
			product_code,
			cross_reference_personal,
			acceptance_date,
			ar_fabric_length,
			ar_fabric_width,
			ar_fabric_pcs,
			ar_fabric_shrinkage,
			ar_fabric_total_measurement,
			ar_fabric_total_amount,
			recycled,
			recycled_date
		)
		select 
			UNNEST(arr_fabric_requisition_id::integer[]),
			UNNEST(arr_fabric_order_no::varchar[]),
			UNNEST(arr_old_transaction_id::varchar[]),
			UNNEST(arr_new_transaction_id::varchar[]),
			UNNEST(arr_fabric_code::varchar[]),
			UNNEST(arr_style_ccode_id::integer[]),
			UNNEST(arr_item_code::varchar[]),
			UNNEST(arr_product_code::varchar[]),
			UNNEST(arr_cross_reference_personal::text[]),
			CURRENT_TIMESTAMP,
			UNNEST(arr_fabric_length::float[]),
			UNNEST(arr_fabric_width::float[]),
			UNNEST(arr_fabric_pcs::integer[]),
			UNNEST(arr_fabric_shrinkage::float[]),
			UNNEST(arr_fabric_total_measurement::float[]),
			UNNEST(arr_fabric_total_amount::float[]),
			v_recycled,
			current_timestamp
		;


		output_msg:='Successfully inserted';


	
END
$BODY$
  LANGUAGE plpgsql;
